@using SchoolProj.Langauges
@{
    ViewBag.Title = "Students In Class";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using SchoolProj.DLL.Model;
@using SchoolProj.Enum;
@using SchoolProj.DLL.Shared;
@model IEnumerable<StudentsInClassModel>
@if (Model.Count() > 0)
{
    <h2 dir="rtl">@Localization.Students @Model.Select(p => p.ClassNemeAr).FirstOrDefault() </h2>
    <div style="height:78vh">
        <table class="table">
            <thead>
                <tr>
                    <th>@Localization.FullNameAr</th>
                    <th>@Localization.FullNameEn</th>
                    <th>@Localization.Age</th>
                    <th>@Localization.Gender</th>
                    <th>@Localization.Grade</th>
                    <th>@Localization.Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.StudentNameAr</td>
                        <td>@item.StudentNameEn</td>
                        <td>@item.Age</td>
                        <td>@((Gender)item.Gender)</td>
                        <td>
                            <span class="grade" data-student-id="@item.StudentId">@item.Grade</span>
                            <input type="text" class="edit-grade d-none" value="@item.Grade" data-student-id="@item.StudentId" />
                            <span asp-validation-for="@item.Grade"></span>
                        </td>
                        <td>
                            <button class="btn btn-primary assign-mark">
                                @if (item.Grade is null)
                                {
                                    <text>@Localization.AssignMark</text>
                                }
                                else
                                {
                                    <text>@Localization.ReassignMark</text>

                                }
                            </button>
                            <button class="btn btn-success save-grade d-none">@Localization.Save</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
@section Scripts {
    <script>
        $(document).ready(function () {
            $(".assign-mark").click(function () {
                var row = $(this).closest("tr");
                $(".grade", row).addClass("d-none");
                $(".edit-grade", row).removeClass("d-none");
                $(this).addClass("d-none");
                $(".save-grade", row).removeClass("d-none");
            });

            $(".save-grade").click(function () {
                var row = $(this).closest("tr");
                var studentId = $(".grade, .edit-grade", row).data("student-id");
                var newGrade = $(".edit-grade", row).val();
                var materialId = $("#materialId").data("material-id");
                var classId = $("#classId").data("class-id");
                // Assuming AJAX call to update the grade
                if (newGrade < 0 || newGrade > 100 || isNaN(newGrade)) {
                    Swal.fire({
                        icon: 'error',
                        text: `@($"Grade must be a number between {GradeConst.MinGrade} and {GradeConst.MaxGrade}")`,
                    });
                    return;

                }
                $.post("/ClassTeacher/UpdateGrade", { StudentId: studentId, Grade: newGrade, MaterialId:@ViewBag.MaterialId, ClassId:@Model.Select(p=>p.ClassId).FirstOrDefault() }, function () {
                    $(".grade", row).text(newGrade).removeClass("d-none");
                    $(".edit-grade", row).addClass("d-none");
                    $(".save-grade", row).addClass("d-none");
                    $(".assign-mark", row).removeClass("d-none");
                    $(this).addClass("d-none");
                });
            });
        });
    </script>
}

